name: Deploy

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
      # Gradlew 실행 허용
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew
      # JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # 환경 변수 설정
      - name: Set environment values
        run: |
          cd ./src/main/resources
          touch ./application-secure.yml
          echo "${{ secrets.APPLICATION_SECURE_YML }}" > ./application-secure.yml
          touch ./applied-card-403302-4a5091591256.json
          echo "${{ secrets.GCP_JSON }}" > ./applied-card-403302-4a5091591256.json
        shell: bash
      # Gradle build (Test 제외)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build -x test
      # Docker build
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t matna .
          docker tag matna sor999/matna:${GITHUB_SHA::7}
          docker push sor999/matna:${GITHUB_SHA::7}
      # Deploy
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: vm 인스턴스 외부ip
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: GITHUB_SHA
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${GITHUB_SHA::7}
            sudo docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${GITHUB_SHA::7} matna_spring
            sudo docker-compose up -d
            
